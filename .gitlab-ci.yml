image: eclipse-temurin:17-jdk-jammy

# 1. Объявляем все стадии, которые потом используем
stages:
  - lint
  - build
  - unit-test
  - integration-test
  - qa
  - report

variables:
  ANDROID_COMPILE_SDK: "33"
  ANDROID_BUILD_TOOLS: "33.0.2"
  ANDROID_SDK_TOOLS: "9477386"
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"
  ANDROID_HOME: "$CI_PROJECT_DIR/android-sdk-root"

before_script:
  - apt-get update -yq
  - apt-get install -yq wget unzip
  - export ANDROID_HOME="$CI_PROJECT_DIR/android-sdk-root"
  - mkdir -p "$ANDROID_HOME/cmdline-tools"
  - wget -qO sdk.zip "https://dl.google.com/android/repository/commandlinetools-linux-${ANDROID_SDK_TOOLS}_latest.zip"
  - unzip -qq sdk.zip -d /tmp
  - mv /tmp/cmdline-tools "$ANDROID_HOME/cmdline-tools/latest"
  - rm -rf sdk.zip /tmp/cmdline-tools
  - export PATH="$ANDROID_HOME/cmdline-tools/latest/bin:$PATH"
  - yes | sdkmanager --sdk_root="$ANDROID_HOME" --licenses || true
  - sdkmanager --sdk_root="$ANDROID_HOME" "platform-tools" "platforms;android-${ANDROID_COMPILE_SDK}" "build-tools;${ANDROID_BUILD_TOOLS}"
  - echo "sdk.dir=$ANDROID_HOME" > local.properties
  - export ANDROID_HOME="$PWD/android-sdk-root"
  - echo "ANDROID_HOME is $ANDROID_HOME"
  - chmod +x ./gradlew


# …ваша проверенная логика установки SDK…

# 2. Линтинг
lint:
  stage: lint
  script:
    - ./gradlew lintDebug
  artifacts:
    paths:
      - app/build/reports/lint-results.html

# 3. Сборка APK
buildDebug:
  stage: build
  script:
    - ./gradlew assembleDebug
  artifacts:
    paths:
      - app/build/outputs/

# 4. Unit-тесты
unitTest:
  stage: unit-test
  needs: ["buildDebug"]
  script:
    - ./gradlew testDebugUnitTest
  artifacts:
    paths:
      - app/build/reports/jacoco/

# 5. Интеграционные тесты
integrationTest:
  image: cirrusci/android-sdk:33
  stage: integration-test
  before_script:
    - yes | sdkmanager --licenses || true
    - sdkmanager "system-images;android-33;google_apis;arm64-v8a"
    - |
      echo no | avdmanager create avd \
        -n test \
        -k "system-images;android-33;google_apis;arm64-v8a"
    - emulator -avd test \
      -no-window \
      -no-audio \
      -no-boot-anim \
      -no-accel \
      -no-metrics &
    - android-wait-for-emulator
    - adb shell settings put global window_animation_scale 0
    - adb shell settings put global transition_animation_scale 0
  script:
    - ./gradlew connectedDebugAndroidTest || true
    - echo "=== Дерево app/build/reports ==="
    - find app/build/reports -maxdepth 3 | sed 's/^/   /'
  artifacts:
    when: always
    paths:
      - app/build/reports/androidTests/connectedDebugAndroidTest/*.html
      - app/build/reports/androidTests/connectedDebugAndroidTest/*.xml

# 6. Дополнительный QA (Detekt)
detekt:
  image: eclipse-temurin:17-jdk-jammy
  stage: qa
  script:
    - ./gradlew detekt
  artifacts:
    paths:
      - app/build/reports/detekt/

# 7. Отчёт по покрытию
coverageReport:
  stage: report
  script:
    - ./gradlew testDebugUnitTest jacocoTestReport
  artifacts:
    when: always
    paths:
      - app/build/reports/jacoco/

