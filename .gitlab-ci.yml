image: eclipse-temurin:17-jdk-jammy

# 1. Объявляем все стадии, которые потом используем
stages:
  - lint
  - build
  - unit-test
  - integration-test
  - qa
  - report

variables:
  ANDROID_COMPILE_SDK: "33"
  ANDROID_BUILD_TOOLS: "33.0.2"
  ANDROID_SDK_TOOLS: "9477386"
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

before_script:
# …ваша проверенная логика установки SDK…

# 2. Линтинг
lint:
  stage: lint
  script:
    - ./gradlew lintDebug
  artifacts:
    paths:
      - app/build/reports/lint-results.html

# 3. Сборка APK
buildDebug:
  stage: build
  script:
    - ./gradlew assembleDebug
  artifacts:
    paths:
      - app/build/outputs/

# 4. Unit-тесты
unitTest:
  stage: unit-test
  needs: ["buildDebug"]
  script:
    - ./gradlew testDebugUnitTest
  artifacts:
    paths:
      - app/build/reports/jacoco/

# 5. Интеграционные тесты
integrationTest:
  image: cirrusci/android-sdk:latest
  stage: integration-test
  before_script:
    - yes | sdkmanager --licenses
    - sdkmanager "system-images;android-33;google_apis;x86_64"
    - echo no | avdmanager create avd -n test -k "system-images;android-33;google_apis;x86_64"
    - emulator -avd test -no-window -no-audio -no-boot-anim &
    - android-wait-for-emulator
    - adb shell settings put global window_animation_scale 0
    - adb shell settings put global transition_animation_scale 0
  script:
    - ./gradlew connectedDebugAndroidTest
  artifacts:
    paths:
      - app/build/reports/androidTests/

# 6. Дополнительный QA (Detekt)
detekt:
  image: eclipse-temurin:17-jdk-jammy
  stage: qa
  script:
    - ./gradlew detekt
  artifacts:
    paths:
      - app/build/reports/detekt/

# 7. Отчёт по покрытию
coverageReport:
  stage: report
  script:
    - ./gradlew testDebugUnitTest jacocoTestReport
  artifacts:
    when: always
    paths:
      - app/build/reports/jacoco/
